/***************************** BEGIN LICENSE BLOCK ***************************

The contents of this file are subject to the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain one
at http://mozilla.org/MPL/2.0/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.
 
Copyright (C) 2012-2015 Sensia Software LLC. All Rights Reserved.
 
******************************* END LICENSE BLOCK ***************************/

package org.sensorhub.impl.service.sos;

import net.opengis.sensorml.v20.AbstractProcess;
import org.vast.ows.sos.ISOSDataProviderFactory;
import org.vast.ows.sos.SOSOfferingCapabilities;


public interface IDataProviderFactory extends ISOSDataProviderFactory
{

    /**
     * Allows to check if provider is enabled
     * @return true if enabled, false otherwise
     */
    public boolean isEnabled();
    
    
    /**
     * Builds the offering capabilities using the provider configuration
     * This will connect to source providers to retrieve the necessary metadata
     * @return SOS capabilities object containing the maximum of metadata
     * @throws Exception 
     */
    public SOSOfferingCapabilities generateCapabilities() throws Exception;
    
    
    /**
     * Update capabilities previously generated by this provider if needed.
     * The object updated must be the one returned by {@link #generateCapabilities()}
     * @throws Exception 
     */
    public void updateCapabilities() throws Exception;
        
    
    /**
     * Retrieves the SensorML description associated to this data source
     * @param time Time at which the description should be valid 
     * @return the SensorML process object describing the sensor
     * @throws Exception 
     */
    public AbstractProcess generateSensorMLDescription(double time) throws Exception;
    
    
    /**
     * Called when the provider is removed
     */    
    public void cleanup();

}
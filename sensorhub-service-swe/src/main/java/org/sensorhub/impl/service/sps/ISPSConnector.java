/***************************** BEGIN LICENSE BLOCK ***************************

The contents of this file are subject to the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain one
at http://mozilla.org/MPL/2.0/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.
 
The Initial Developer is Sensia Software LLC. Portions created by the Initial
Developer are Copyright (C) 2014 the Initial Developer. All Rights Reserved.
 
******************************* END LICENSE BLOCK ***************************/

package org.sensorhub.impl.service.sps;

import org.vast.ows.sps.SPSOfferingCapabilities;
import net.opengis.swe.v20.DataBlock;


/**
 * <p>
 * Interface for all SPS connectors.
 * Implementations can connect to sensors, process, etc.
 * </p>
 *
 * <p>Copyright (c) 2014</p>
 * @author Alexandre Robin <alex.robin@sensiasoftware.com>
 * @since Dec 13, 2014
 */
public interface ISPSConnector
{
    
    /**
     * Allows to check if provider is enabled
     * @return true if enabled, false otherwise
     */
    public boolean isEnabled();
    
    
    /**
     * Builds the offering capabilities using the connector configuration
     * This will connect to source to retrieve the necessary metadata
     * @return SPS offering capabilities object containing the maximum of metadata
     * @throws Exception 
     */
    public SPSOfferingCapabilities generateCapabilities() throws Exception;
    
    
    /**
     * Update capabilities previously generated by this provider if needed.
     * The object updated must be the one returned by {@link #generateCapabilities()}
     * @throws Exception 
     */
    public void updateCapabilities() throws Exception;
    
    
    /**
     * Sends the command data through the connector
     * @param task 
     * @param data
     * @throws Exception
     */
    public void sendSubmitData(ITask task, DataBlock data) throws Exception;
    
    
    /**
     * Called when the connector is removed
     */    
    public void cleanup();
}
